@page "/projetos"
@using Portfolio.Layout
@using System.Text.Json
@inject HttpClient Http

<PageTitle>projetos</PageTitle>

@if (ListaProjetos is null)
{
    <p class="text-white pt-5">Carregando...</p>
}
else
{
    <Container>
        <div class="d-flex flex-wrap gap-3 justify-content-center justify-content-sm-evenly pb-5" style="padding-top:7rem;">
            @foreach (var projeto in ListaProjetos.OrderByDescending(p => p.Id))
            {
                <ProjetoCard Projeto="projeto" OnVerMais="AbrirModal" />
            }
        </div>
    </Container>
}

<ModalProjetos Projeto="@Selecionado" Visivel="@MostrarModal" OnClose="@FecharModal" />

@code {
    private List<Projeto>? ListaProjetos;
    private Projeto? Selecionado;
    private bool MostrarModal = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var json = await Http.GetStringAsync("data/projects.json");
            ListaProjetos = JsonSerializer.Deserialize<List<Projeto>>(json, new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            });
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar projetos: {ex.Message}");
        }
    }

    private void AbrirModal(Projeto projeto)
    {
        Selecionado = projeto;
        MostrarModal = true;
    }

    private void FecharModal()
    {
        MostrarModal = false;
        Selecionado = null;
    }
}