@page "/"
@using System.Text.Json
@inject HttpClient Http
<PageTitle>Home</PageTitle>
<Banner/>
<Container>
    <section class="w-100">
        <h2 class="mb-5"> Sobre </h2>

        <span>
            Estudante de TI, cursando análise e desenvolvimento de sistemas, com experiência prática em
            desenvolvimento de software. Tenho perfil autodidata e curiosidade continua para aprender,
            explorando tecnologias full stack web e mobile, banco de dados e segurança da informação.
        </span>
    </section>

    <Logos/>

    <section class="w-100 mb-5">

        <h3 class="text-white mb-4">Projetos Recentes</h3>

        @if (ListaProjetos is null)
        {
            <p class="text-white">Carregando...</p>
        }
        else
        {
            var maisRecentes = ListaProjetos
            .OrderByDescending(p => p.Id)
            .Take(2)
            .ToList();

            <div class="d-flex flex-wrap justify-content-center gap-4">
                @foreach (var projeto in maisRecentes)
                {
                    <ProjetoCard Projeto="projeto" OnVerMais="AbrirModal" />
                }
            </div>
        }


        @if (ProjetoSelecionado != null)
        {
            <div class="modal fade show d-block bg-dark bg-opacity-75" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content bg-dark text-white">
                        <div class="modal-header">
                            <h5 class="modal-title">@ProjetoSelecionado.Title</h5>
                            <button class="btn-close btn-close-white" @onclick="FecharModal"></button>
                        </div>
                        <div class="modal-body">
                            <p>@ProjetoSelecionado.Description</p>

                            @if (!string.IsNullOrWhiteSpace(ProjetoSelecionado.GithubCode))
                            {
                                <a class="btn btn-outline-light me-2" target="_blank" href="@ProjetoSelecionado.GithubCode">GitHub</a>
                            }

                            @if (!string.IsNullOrWhiteSpace(ProjetoSelecionado.Deploy))
                            {
                                <a class="btn btn-outline-light" target="_blank" href="@ProjetoSelecionado.Deploy">Ver Online</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        @code {
            private List<Projeto>? ListaProjetos;
            private Projeto? ProjetoSelecionado;

            protected override async Task OnInitializedAsync()
            {
                var json = await Http.GetStringAsync("data/projects.json");
                ListaProjetos = JsonSerializer.Deserialize<List<Projeto>>(json, new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true
                });
            }

            void AbrirModal(Projeto projeto) => ProjetoSelecionado = projeto;
            void FecharModal() => ProjetoSelecionado = null;
        }
    </section>

</Container>