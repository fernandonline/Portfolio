@code {
    [Parameter]
    public List<CarouselItem> Items { get; set; } = new();

    [Parameter]
    public int DelaySeconds { get; set; } = 5;

    private int currentIndex = 0;
    private System.Timers.Timer? timer;

    protected override void OnInitialized()
    {
        if (Items.Count > 1)
        {
            timer = new(DelaySeconds * 1000);
            timer.Elapsed += (s, e) =>
            {
                currentIndex = (currentIndex + 1) % Items.Count;
                InvokeAsync(StateHasChanged);
            };
            timer.Start();
        }
    }

    public void Dispose()
    {
        timer?.Stop();
        timer?.Dispose();
    }

    public class CarouselItem
    {
        public string ImageUrl { get; set; } = "";
    }
}

<div class="carousel-wrapper">
    <div class="carousel-inner" style="transform:translateX(-@($"{currentIndex * 100}%"))">
        @foreach (var item in Items)
        {
            <div class="carousel-slide">
                @if (!string.IsNullOrEmpty(item.ImageUrl))
                {
                    <img src="@item.ImageUrl" alt="@item.ImageUrl" class="carousel-background" />
                }
            </div>
        }
    </div>
</div>

<style>
    .carousel-wrapper {
        position: relative;
        width: 100%;
        overflow: hidden;
    }

    .carousel-inner {
        display: flex;
        transition: transform 0.6s ease-in-out;
        width: 100%;
        height: 100%;
        
    }

    .carousel-slide {
        position: relative;
        min-width: 100%;
        height: 100%;
        box-sizing: border-box;
        overflow: hidden;
    }

    .carousel-background {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
        border-radius: 18px;
    }
</style>