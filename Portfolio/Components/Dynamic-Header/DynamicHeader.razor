@inject ThemeService ThemeService

@code {
    private string currentTheme = "dark";

    private async Task ToggleTheme()
    {
        currentTheme = currentTheme == "dark" ? "light" : "dark";
        await ThemeService.SetTheme(currentTheme);
    }
}

<header>

    <div class="topo">

        <NavLink href="/" class="topo-item">
            <HomeSvg />
            <span>inicio</span>
        </NavLink>

        <NavLink href="/projetos" class="topo-item">
            <ProjectsSvg />
            <span>projetos</span>
        </NavLink>

        <div class="topo-item">
            <Email/>
            <span>contato</span>
        </div>

        <div class="topo-item" @onclick="ToggleTheme">
                @if (currentTheme == "dark")
                {
                    <MoonSvg />
                }
                else
                {
                    <SunSvg />
                }

                <span>tema</span>
        </div>

    </div>
        
</header>

@if (currentTheme == "dark")
{
    <style>
        .topo {
            border: 1px solid white;
        }
    </style>
}

<style>
    :root {
        --top-bottom: 20px;
    }

    header {
        width: 100%;
        position: fixed;
        z-index: 1;
        bottom: var(--top-bottom);
        display: flex;
        flex-direction: column;
        align-items: center;
        max-height: 3.5rem;
    }

    .topo {
        background-color: #000;
        width: 80%;
        height: 3.5rem;
        border-radius: 1rem;
        padding: 2rem;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-around;
    }

    .topo-item {
        width: 25px;
        display: flex;
        flex-direction: column;
        align-items: center;
        cursor: pointer;
        color: #FFF;
        text-decoration: none;
    }

    /* Quando a tela for larga (desktop), o header vai pro topo */
    @@media (min-width: 654px) {
        header {
            top: var(--top-bottom);
        }
    }
</style>
