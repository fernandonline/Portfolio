@using System.Text.Json
@inject HttpClient Http
<section class="w-100 mb-5">

    <h2 class="mb-5">Projetos Recentes</h2>

    @if (ListaProjetos is null)
    {
        <p class="text-white">Carregando...</p>
    }
    else
    {
        var maisRecentes = ListaProjetos
        .OrderByDescending(p => p.Id)
        .Take(2)
        .ToList();

        <div class="d-flex flex-wrap justify-content-center gap-4">
            @foreach (var projeto in maisRecentes)
            {
                <ProjetoCard Projeto="projeto" OnVerMais="AbrirModal" />
            }
        </div>
    }


    @if (ProjetoSelecionado != null)
    {
        <ModalProjetos Projeto="@ProjetoSelecionado" Visivel="@MostrarModal" OnClose="@FecharModal" />
    }

    @code {
        private List<Projeto>? ListaProjetos;
        private Projeto? ProjetoSelecionado;
        private bool MostrarModal = false;

        protected override async Task OnInitializedAsync()
        {
            var json = await Http.GetStringAsync("data/projects.json");
            ListaProjetos = JsonSerializer.Deserialize<List<Projeto>>(json, new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            });
        }

        private void AbrirModal(Projeto projeto)
        {
            ProjetoSelecionado = projeto;
            MostrarModal = true;
        }

        private void FecharModal()
        {
            MostrarModal = false;
            ProjetoSelecionado = null;
        }
    }
</section>